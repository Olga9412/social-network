{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/Ava.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","avaElements","ava","map","a","dialogsElements","dialogs","d","messagesElements","messages","m","isAuth","dialogsItems","values","addMessage","newMessageText","Ava","src","mapStateToPropsForRedirect","state","auth","compose","connect","dialogsPage","dialogItem","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,IAAM,qBAAqB,OAAS,wBAAwB,SAAW,4B,6FCY1JC,EATE,SAACC,GACd,IAAIC,EAAK,YAAcD,EAAME,GAE1B,OAAQ,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACT,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCEjBC,EALA,SAACT,GACZ,OAAO,qBAAKG,UAAWC,IAAEM,QAAlB,SAA4BV,EAAMU,W,0CCEvCC,EAAUC,YAAiB,KAWpBC,EAAoBC,YAAU,CAACC,KAAK,2BAAhBD,EAVZ,SAACd,GAClB,OACG,uBAAMgB,SAAUhB,EAAMiB,aAAtB,UACE,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUZ,KAAK,iBACjCa,SAAU,CAACC,IAASX,GAAYY,YAAY,kBAC1C,gDC4DIC,EA/DD,SAACxB,GAEf,IAAIyB,EAAYzB,EAAM0B,IAAIC,KAAI,SAAAC,GAAC,OAAG,cAAC,EAAD,CAAKF,IAAKE,EAAEF,SAE1CG,EAAgB7B,EAAM8B,QAAQH,KAAI,SAAAI,GAAC,OAAG,cAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAMN,GAAI6B,EAAE7B,QAGtE8B,EAAiBhC,EAAMiC,SAASN,KAAI,SAAAO,GAAC,OAAI,cAAC,EAAD,CAASxB,QAASwB,EAAExB,aAmB3D,OAAmB,IAAfV,EAAMmC,OAAuB,cAAC,IAAD,CAAU5B,GAAI,WAI7C,sBAAKJ,UAAWC,IAAE0B,QAAlB,UACA,qBAAK3B,UAAWC,IAAEsB,MAEhBD,EACF,qBAAKtB,UAAWC,IAAEgC,aAAlB,SAGIP,IAGH,sBAAK1B,UAAWC,IAAE6B,SAAlB,UAEID,EACD,cAACnB,EAAD,CAAqBG,SA3Bd,SAACqB,GAEhBrC,EAAMsC,WAAWD,EAAOE,0BCZbC,EAVL,SAACxC,GACV,OACI,sBAAKG,UAAWC,IAAEsB,IAAlB,cAAyB1B,EAAM0B,IAC3B,qBAAKe,IAAI,gF,wDCNdC,EAA2B,SAACC,GAAD,MAAW,CAElCR,OAAOQ,EAAMC,KAAKT,S,OCgCVU,sBACdC,aAzBoB,SAACH,GACrB,MAAO,CACLJ,eAAeI,EAAMI,YAAYR,eACjCS,WAAWL,EAAMI,YAAYjB,QAC7BJ,IAAIiB,EAAMI,YAAYrB,IACtBI,QAAQa,EAAMI,YAAYjB,QAC1BG,SAASU,EAAMI,YAAYd,aAKN,SAACgB,GACxB,MAAM,CAKJX,WAAW,SAACC,GACVU,EAASC,YAAwBX,UDxBT,SAACY,GAAa,IAClCC,EADiC,4JAEnC,WACI,OAAuB,IAApBC,KAAKrD,MAAMmC,OAAuB,cAAC,IAAD,CAAU5B,GAAI,YAE5C,cAAC4C,EAAD,eAAeE,KAAKrD,YALI,GACPsD,IAAMH,WAUtC,OAFqCL,YAAQJ,EAARI,CAAoCM,KCqB7DP,CAGbrB","file":"static/js/3.6ed5d316.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3ZtmR\",\"dialogsItems\":\"Dialogs_dialogsItems__6V9v9\",\"ava\":\"Dialogs_ava__1hhUV\",\"active\":\"Dialogs_active__DQVw8\",\"messages\":\"Dialogs_messages__dHsib\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst DialogItem=(props)=> {\r\n    let path=\"/dialogs/\" + props.id;\r\n\r\n       return  <div className={s.dialog + ' ' + s.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n      \r\n      </div>\r\n}\r\n\r\nexport default DialogItem;    \r\n\r\n\r\n\r\n\r\n\r\n   ","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\n\r\nconst Message =(props)=> {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\n\r\nexport default Message;\r\n\r\n\r\n\r\n\r\n\r\n   ","import { Field, reduxForm } from 'redux-form';\r\nimport { required,maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../FormsControls/FormsControls';\r\n\r\n\r\n\r\n\r\n\r\nconst maxLength=maxLengthCreator(100);\r\nconst AddMessageForm=(props)=>{\r\n    return(\r\n       <form onSubmit={props.handleSubmit} >\r\n         <Field component={Textarea} name='newMessageText'\r\n         validate={[required,maxLength]} placeholder='Enter message' />\r\n           <button>send</button>\r\n            </form>\r\n            \r\n    )\r\n }\r\nexport const AddMessageFormRedux=reduxForm({form:'dialog-add-message-form'})(AddMessageForm)","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport Ava from './Ava';\r\nimport { Redirect } from 'react-router';\r\n// import { Field, reduxForm } from 'redux-form';\r\n// import { Textarea } from '../FormsControls/FormsControls';\r\n// import { maxLengthCreator, required } from '../../utils/validators/validators';\r\nimport {AddMessageFormRedux} from './AddMessageForm/AddMessageForm';\r\n\r\nconst Dialogs=(props)=>{\r\n\r\nlet avaElements=props.ava.map(a=> <Ava ava={a.ava} />);\r\n\r\nlet dialogsElements=props.dialogs.map(d=> <DialogItem name={d.name} id={d.id}/>);\r\n \r\n\r\nlet messagesElements=props.messages.map(m => <Message message={m.message}/>)\r\n\r\nlet newMessageElement=React.createRef();\r\n\r\n// let OnAddMessage=()=>{\r\n  \r\n//    props.addMessage();\r\n     \r\n//     }\r\n let addNewMessage=(values)=>{\r\n    \r\n    props.addMessage(values.newMessageText);\r\n }\r\n   //   let onMessageChange=()=> {\r\n   //    let text=newMessageElement.current.value;\r\n   //    props.updateNewMessageText(text);\r\n     \r\n   //    }\r\n\r\n      if (props.isAuth===false) return <Redirect to={'/login'}/>;\r\n\r\n return (\r\n    \r\n        <div className={s.dialogs}>\r\n        <div className={s.ava}>\r\n        </div>\r\n         {avaElements}\r\n        <div className={s.dialogsItems}>\r\n        \r\n         \r\n           {dialogsElements }\r\n      </div>\r\n        \r\n         <div className={s.messages}>\r\n             \r\n            {messagesElements}  \r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            \r\n         </div>\r\n       </div>\r\n           \r\n       )    \r\n             \r\n }\r\n//  const maxLength=maxLengthCreator(100);\r\n//   const AddMessageForm=(props)=>{\r\n//     return(\r\n//        <form onSubmit={props.handleSubmit} >\r\n//          <Field component={Textarea} name='newMessageText'\r\n//          validator={[required,maxLength]} placeholder='Enter message' />\r\n//            <button >Enter message</button>\r\n//             </form>\r\n            \r\n//     )\r\n//  }\r\n// const AddMessageFormRedux=reduxForm({form:'dialogAddMessageForm'})(AddMessageForm)\r\nexport default Dialogs;     \r\n        \r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   ","import React from 'react';\r\nimport Dialogs from './Dialogs';\r\nimport s from './Dialogs.module.css';\r\n\r\n\r\n\r\n\r\nconst Ava=(props)=>{\r\n return (\r\n     <div className={s.ava}> {props.ava}\r\n         <img src='https://www.meme-arsenal.com/memes/87c4d2c4121be55556c93c14aa0ea613.jpg'></img>\r\n        \r\n\r\n </div>\r\n \r\n)\r\n    }\r\nexport default Ava;        \r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   ","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect=(state)=> ({\r\n\r\n        isAuth:state.auth.isAuth,\r\n      })\r\nexport const withAuthRedirect=(Component)=>{\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if(this.props.isAuth===false) return <Redirect to={'./login'}/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    \r\n      let ConnectedAuthRedirectComponent=connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n      \r\n    return ConnectedAuthRedirectComponent ;\r\n}\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport Ava from './Ava';\r\nimport {addMessageActionCreator,updateNewMessageTextActionCreator} from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { Redirect } from 'react-router';\r\nimport {connect} from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nconst mapStateToProps=(state)=>{\r\n  return {\r\n    newMessageText:state.dialogsPage.newMessageText,\r\n    dialogItem:state.dialogsPage.dialogs,\r\n    ava:state.dialogsPage.ava,\r\n    dialogs:state.dialogsPage.dialogs,\r\n    messages:state.dialogsPage.messages,\r\n    \r\n\r\n  }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n  return{\r\n    // updateNewMessageText:(text)=>{\r\n    //   let action=updateNewMessageTextActionCreator(text);\r\n    //     dispatch(action);\r\n    // },\r\n    addMessage:(newMessageText)=>{\r\n      dispatch(addMessageActionCreator(newMessageText));\r\n    },\r\n  }\r\n}\r\n\r\n\r\n export default compose(\r\n  connect(mapStateToProps,mapDispatchToProps),\r\n  withAuthRedirect\r\n) (Dialogs);\r\n            \r\n         \r\n             \r\n \r\n\r\n\r\n\r\n\r\n \r\n\r\n   \r\n \r\n    \r\n        \r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   "],"sourceRoot":""}